<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凌云的个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.shifeiqi.top/"/>
  <updated>2019-03-06T12:26:58.339Z</updated>
  <id>http://www.shifeiqi.top/</id>
  
  <author>
    <name>凌云</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>直接插入排序</title>
    <link href="http://www.shifeiqi.top/2019/03/06/2019-03-06-insert-sort/"/>
    <id>http://www.shifeiqi.top/2019/03/06/2019-03-06-insert-sort/</id>
    <published>2019-03-06T12:24:00.000Z</published>
    <updated>2019-03-06T12:26:58.339Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🌒原理"><a href="#🌒原理" class="headerlink" title="🌒原理"></a>🌒原理</h3><h4 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h4><p>将序列分为两部分：<code>已排序序列</code>和<code>未排序序列</code>,每次遍历队列都会做以下操作：</p><ol><li>从<code>未排序队列</code>中取一个值(一般取队列头元素或尾元素)。</li><li>将取到的值插入到<code>已排序队列</code>的正确位置。</li></ol><h4 id="时间复杂度-O-n-2"><a href="#时间复杂度-O-n-2" class="headerlink" title="时间复杂度: O(n^2)"></a>时间复杂度: <code>O(n^2)</code></h4><h4 id="稳定性排序算法"><a href="#稳定性排序算法" class="headerlink" title="稳定性排序算法"></a>稳定性排序算法</h4><h3 id="🌓示例"><a href="#🌓示例" class="headerlink" title="🌓示例"></a>🌓示例</h3><p>以下模拟对 <code>[3, 2, 5, 7, 1, 8, 9, 4, 6]</code> 进行插入排序过程:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">0x00  选取3插入到已排序队列中</span><br><span class="line">    [已排序][未排序--------------------]</span><br><span class="line">            [3, 2, 5, 7, 1, 8, 9, 4, 6]</span><br><span class="line">             ^</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">0x01  选取2插入到已排序队列中</span><br><span class="line">        [已排序][未排序----------------]</span><br><span class="line">            [3, 2, 5, 7, 1, 8, 9, 4, 6]</span><br><span class="line">                ^</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">0x02  选取5插入到已排序队列中</span><br><span class="line">           [已排序][未排序-------------]</span><br><span class="line">            [2, 3, 5, 7, 1, 8, 9, 4, 6]</span><br><span class="line">                   ^</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">0x03  选取7插入到已排序队列中</span><br><span class="line">            [已排序--][未排序----------]</span><br><span class="line">            [2, 3, 5, 7, 1, 8, 9, 4, 6]</span><br><span class="line">                      ^</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">0x04  选取1插入到已排序队列中</span><br><span class="line">            [已排序-----][未排序-------]</span><br><span class="line">            [2, 3, 5, 7, 1, 8, 9, 4, 6]</span><br><span class="line">                         ^</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">0x05  选取8插入到已排序队列中</span><br><span class="line">            [已排序--------][未排序----]</span><br><span class="line">            [1, 2, 3, 5, 7, 8, 9, 4, 6]</span><br><span class="line">                            ^</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">0x06  选取9插入到已排序队列中</span><br><span class="line">           [已排序-----------][未排序-]</span><br><span class="line">           [1, 2, 3, 5, 7, 8, 9, 4, 6]</span><br><span class="line">                              ^</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">0x07  选取4插入到已排序队列中</span><br><span class="line">           [已排序--------------][未排序]</span><br><span class="line">           [1, 2, 3, 5, 7, 8, 9, 4, 6]</span><br><span class="line">                                 ^</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">0x08  选取6插入到已排序队列中</span><br><span class="line">           [已排序--------------][未排序]</span><br><span class="line">           [1, 2, 3, 4, 5, 7, 8, 9, 6]</span><br><span class="line">                                    ^</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">0x09  排序完成</span><br><span class="line">           [已排序------------------ -][未排序]</span><br><span class="line">           [1, 2, 3, 4, 5, 6, 7, 8, 9]</span><br></pre></td></tr></table></figure></p><h3 id="🌔实现"><a href="#🌔实现" class="headerlink" title="🌔实现"></a>🌔实现</h3><h4 id="Java实现"><a href="#Java实现" class="headerlink" title="Java实现"></a>Java实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap func</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> lIndex, <span class="keyword">int</span> rIndex)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> tmp = array[lIndex];</span><br><span class="line">      array[lIndex] = array[rIndex];</span><br><span class="line">      array[rIndex] = tmp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// interface: insert sort func</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">int</span>[] insertSort(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">      <span class="keyword">int</span>[] array = Arrays.copyOf(nums, nums.length);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span>; j--) &#123;</span><br><span class="line">              <span class="keyword">if</span>(array[j - <span class="number">1</span>] &gt;  array[j])</span><br><span class="line">                  swap(array, j - <span class="number">1</span>, j);</span><br><span class="line">              <span class="keyword">else</span></span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> array;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="JavaScript实现"><a href="#JavaScript实现" class="headerlink" title="JavaScript实现"></a>JavaScript实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// swap</span></span><br><span class="line"><span class="keyword">const</span> swap = <span class="function">(<span class="params">array, lIndex, rIndex</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> tmp = array[lIndex]</span><br><span class="line">  array[lIndex] = array[rIndex]</span><br><span class="line">  array[rIndex] = tmp</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// interface: insert sort</span></span><br><span class="line"><span class="keyword">const</span> insertSort = <span class="function">(<span class="params">nums</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> array = nums.map(<span class="function"><span class="params">e</span> =&gt;</span> e);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span> ; i &lt; array.length; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j = i; j &gt; <span class="number">0</span>; j--) &#123;</span><br><span class="line">      <span class="keyword">if</span>(array[j - <span class="number">1</span>] &gt; array[j])</span><br><span class="line">        swap(array, j - <span class="number">1</span>, j)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> array</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// test</span></span><br><span class="line"><span class="keyword">const</span> nums = [<span class="number">123</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">62</span>,<span class="number">2</span>,<span class="number">67</span>,<span class="number">234</span>,<span class="number">234</span>,<span class="number">234</span>,<span class="number">12</span>]</span><br><span class="line"><span class="keyword">const</span> ret = insertSort(nums)</span><br><span class="line"><span class="built_in">console</span>.log(ret)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;🌒原理&quot;&gt;&lt;a href=&quot;#🌒原理&quot; class=&quot;headerlink&quot; title=&quot;🌒原理&quot;&gt;&lt;/a&gt;🌒原理&lt;/h3&gt;&lt;h4 id=&quot;基本原理&quot;&gt;&lt;a href=&quot;#基本原理&quot; class=&quot;headerlink&quot; title=&quot;基本原理&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="2019" scheme="http://www.shifeiqi.top/categories/2019/"/>
    
    
      <category term="算法" scheme="http://www.shifeiqi.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.shifeiqi.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>快速排序</title>
    <link href="http://www.shifeiqi.top/2019/03/05/2019-03-05-quick-sort/"/>
    <id>http://www.shifeiqi.top/2019/03/05/2019-03-05-quick-sort/</id>
    <published>2019-03-05T11:24:00.000Z</published>
    <updated>2019-03-05T11:48:27.798Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🐶-原理"><a href="#🐶-原理" class="headerlink" title="🐶 原理"></a>🐶 原理</h3><h4 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h4><p>  快速排序属于交换排序的一种，采用<code>分治</code>的思想， 步骤如下：  </p><ol><li><code>基准&lt;pivot&gt;</code>选取: 从待排序序列中挑出一个元素，称之为”基准元素”(pivot)，一般选择队列中第一个元素或者最后一个元素。</li><li><code>分割&lt;partition&gt;</code>操作：把所有比基准元素小的元素交换到基准元素前面，所有比基准元素大的元素交换到基准元素后面。</li><li>在 由基准元素分割得到的两个子队列 上分别执行第1步操作。</li></ol><h4 id="时间复杂度-O-nlogn"><a href="#时间复杂度-O-nlogn" class="headerlink" title="时间复杂度: O(nlogn)"></a>时间复杂度: <code>O(nlogn)</code></h4><h4 id="不稳定"><a href="#不稳定" class="headerlink" title="不稳定"></a>不稳定</h4><h3 id="🐰-示例"><a href="#🐰-示例" class="headerlink" title="🐰 示例"></a>🐰 示例</h3><p>以下示例模拟对 [1, 6, 2, 8, 4, 3, 7, 9, 5] 进行快速排序过程, 基准<pivot>选择序列的最后一个元素.</pivot></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x00</span></span><br><span class="line">       [<span class="number">1</span>,  <span class="number">6</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">4</span>,  <span class="number">3</span>,  <span class="number">7</span>,  <span class="number">9</span>,  <span class="number">5</span>]</span><br><span class="line">                                        ^pivot</span><br><span class="line"></span><br><span class="line">                                  <span class="comment">// 队列[1,6,2,8,4,3,7,9,5]选取基准5,进行第一次递归分割</span></span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0x01</span></span><br><span class="line">       [----比<span class="number">5</span>小-----]          [----比<span class="number">5</span>大-----]</span><br><span class="line">       [<span class="number">1</span>,  <span class="number">3</span>,  <span class="number">2</span>,  <span class="number">4</span>,    &lt;<span class="number">5</span>&gt;,    <span class="number">8</span>,  <span class="number">7</span>,  <span class="number">9</span>,  <span class="number">6</span>]  </span><br><span class="line"></span><br><span class="line">                                 <span class="comment">// 第一次递归分割结束,获得两个子队列</span></span><br><span class="line">                                 <span class="comment">// 队列[1,6,2,8,4,3,7,9,5]被基准5分割为[1,3,2,4]和[8,7,9,6]</span></span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0x10</span></span><br><span class="line">       [             ]           [             ]</span><br><span class="line">       [<span class="number">1</span>,  <span class="number">3</span>,  <span class="number">2</span>,  <span class="number">4</span>,    &lt;<span class="number">5</span>&gt;,    <span class="number">8</span>,  <span class="number">7</span>,  <span class="number">9</span>,  <span class="number">6</span>]</span><br><span class="line">                    ^pivot                    ^pivot</span><br><span class="line"></span><br><span class="line">                                <span class="comment">// 对待分割子队列[1,3,2,4]选取基准4,进入第二次递归分割,</span></span><br><span class="line">                                <span class="comment">// 对待分割子队列[8,7,9,6]选取基准6,进入第二次递归分割</span></span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0x11</span></span><br><span class="line">       [--比<span class="number">4</span>小--]       []      []      [--比<span class="number">6</span>大---]</span><br><span class="line">       [<span class="number">1</span>,  <span class="number">3</span>,  <span class="number">2</span>,  &lt;<span class="number">4</span>&gt;,    &lt;<span class="number">5</span>&gt;,    &lt;<span class="number">6</span>&gt;,  <span class="number">7</span>,  <span class="number">9</span>,  <span class="number">8</span>]</span><br><span class="line">                                <span class="comment">// 第二次递归分割结束,获得四个子队列</span></span><br><span class="line">                                <span class="comment">// [1,3,2,4]被4分割为 [1,3,2] 和 []</span></span><br><span class="line">                                <span class="comment">// [8,7,9,6]被6分割为 [] 和 [7,9,6]</span></span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0x20</span></span><br><span class="line">       [          ]       []      []      [         ]</span><br><span class="line">       [<span class="number">1</span>,  <span class="number">3</span>,  <span class="number">2</span>,   &lt;<span class="number">4</span>&gt;,    &lt;<span class="number">5</span>&gt;,    &lt;<span class="number">6</span>&gt;,  <span class="number">7</span>,  <span class="number">9</span>,  <span class="number">8</span>]</span><br><span class="line">                ^pivot                             ^pivot</span><br><span class="line"></span><br><span class="line">                                <span class="comment">// 子队列[1,3,2]选取基准2,进入第三次递归分割</span></span><br><span class="line">                                <span class="comment">// 子队列[7,9,8]选取基准8,进入第三次递归分割</span></span><br><span class="line">                                <span class="comment">// []不做处理</span></span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="number">0x21</span></span><br><span class="line">       [-]       [-]                        [-]       [-]</span><br><span class="line">       [<span class="number">1</span>,  &lt;<span class="number">2</span>&gt;,  <span class="number">3</span>,   &lt;<span class="number">4</span>&gt;,    &lt;<span class="number">5</span>&gt;,    &lt;<span class="number">6</span>&gt;,  <span class="number">7</span>,  &lt;<span class="number">8</span>&gt;,  <span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">                                <span class="comment">// 第三次递归分割结束,获取4个子队列</span></span><br><span class="line">                                <span class="comment">// [1,3,2]被3分割为[1]和[3]</span></span><br><span class="line">                                <span class="comment">// [7,9,8]被8分割为[7]和[9]</span></span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0x30</span>      </span><br><span class="line">      [-]       [-]                        [-]       [-]</span><br><span class="line">      [<span class="number">1</span>,  &lt;<span class="number">2</span>&gt;,  <span class="number">3</span>,   &lt;<span class="number">4</span>&gt;,    &lt;<span class="number">5</span>&gt;,    &lt;<span class="number">6</span>&gt;,  <span class="number">7</span>,  &lt;<span class="number">8</span>&gt;,  <span class="number">9</span>]</span><br><span class="line">       ^pivot    ^pivot                     ^pivot    ^pivot</span><br><span class="line"></span><br><span class="line">                               <span class="comment">// 子队列[1] [3] [7] [9] 都只包含一个基准元素,直接返回.</span></span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">0x31</span></span><br><span class="line">      [&lt;<span class="number">1</span>&gt;,  &lt;<span class="number">2</span>&gt;,  &lt;<span class="number">3</span>&gt;,   &lt;<span class="number">4</span>&gt;,  &lt;<span class="number">5</span>&gt;,  &lt;<span class="number">6</span>&gt;,  &lt;<span class="number">7</span>&gt;,  &lt;<span class="number">8</span>&gt;,  &lt;<span class="number">9</span>&gt;]</span><br><span class="line"></span><br><span class="line">                               <span class="comment">// 获得排好队列</span></span><br></pre></td></tr></table></figure><h3 id="🐗-实现"><a href="#🐗-实现" class="headerlink" title="🐗 实现"></a>🐗 实现</h3><h4 id="Java-递归实现"><a href="#Java-递归实现" class="headerlink" title="Java 递归实现"></a>Java 递归实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// swap func</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> lIndex, <span class="keyword">int</span> rIndex)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = array[lIndex];</span><br><span class="line">    array[lIndex] = array[rIndex];</span><br><span class="line">    array[rIndex] = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// partition func</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 选取基准</span></span><br><span class="line">    <span class="keyword">int</span> pivot = array[right];</span><br><span class="line">    <span class="keyword">int</span> sIndex = right;</span><br><span class="line">    <span class="comment">// 分割</span></span><br><span class="line">    <span class="keyword">while</span>(left &lt; right) &#123;</span><br><span class="line">        <span class="keyword">while</span>(array[left] &lt;= pivot &amp;&amp; left &lt; right)</span><br><span class="line">            left ++;</span><br><span class="line">        swap(array, left, sIndex);</span><br><span class="line">        sIndex = left;</span><br><span class="line">        <span class="comment">// --</span></span><br><span class="line">        <span class="keyword">while</span>(array[right] &gt;= pivot &amp;&amp; left &lt; right)</span><br><span class="line">            right --;</span><br><span class="line">        swap(array, sIndex, right);</span><br><span class="line">        sIndex = right;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sIndex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// quick sort, recursively func</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(left &gt;= right)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> parIndex = partition(array, left, right);</span><br><span class="line">    <span class="comment">// 递归</span></span><br><span class="line">    quickSort(array, left, parIndex - <span class="number">1</span>);</span><br><span class="line">    quickSort(array, parIndex + <span class="number">1</span>, right);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// sort interface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] sort(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">    <span class="keyword">int</span>[] array = Arrays.copyOf(nums, nums.length);</span><br><span class="line">    quickSort(array, <span class="number">0</span>, array.length - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="JavaScript-递归实现"><a href="#JavaScript-递归实现" class="headerlink" title="JavaScript 递归实现"></a>JavaScript 递归实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// swap func</span></span><br><span class="line"><span class="keyword">const</span> swap = <span class="function">(<span class="params">array, lIndex, rIndex</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> tmp = array[lIndex];</span><br><span class="line">  array[lIndex] = array[rIndex];</span><br><span class="line">  array[rIndex] = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// partition func</span></span><br><span class="line"><span class="keyword">const</span> partition = <span class="function">(<span class="params">array, left, right</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 选择基准</span></span><br><span class="line">  <span class="keyword">const</span> pivot = array[right];</span><br><span class="line">  <span class="keyword">let</span> sIndex = right;</span><br><span class="line">  <span class="comment">// 分割</span></span><br><span class="line">  <span class="keyword">while</span>(left &lt; right) &#123;</span><br><span class="line">    <span class="keyword">while</span>(array[left] &lt;= pivot &amp;&amp; left &lt; right)</span><br><span class="line">      left++;</span><br><span class="line">    swap(array, left, sIndex);</span><br><span class="line">    sIndex = left;</span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    <span class="keyword">while</span>(array[right] &gt;= pivot &amp;&amp; left &lt; right)</span><br><span class="line">      right--;</span><br><span class="line">    swap(array, sIndex, right);</span><br><span class="line">    sIndex = right;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sIndex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// quick sort, recursively func</span></span><br><span class="line"><span class="keyword">const</span> quickSort = <span class="function">(<span class="params">array, left, right</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(left &gt;= right)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">const</span> parIndex = partition(array, left, right);</span><br><span class="line">  quickSort(array, left, parIndex - <span class="number">1</span>);</span><br><span class="line">  quickSort(array, parIndex + <span class="number">1</span>, right);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// sort interface func</span></span><br><span class="line"><span class="keyword">const</span> sort = <span class="function">(<span class="params">nums</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> array = nums.slice();</span><br><span class="line">  quickSort(array, <span class="number">0</span>, array.length - <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;🐶-原理&quot;&gt;&lt;a href=&quot;#🐶-原理&quot; class=&quot;headerlink&quot; title=&quot;🐶 原理&quot;&gt;&lt;/a&gt;🐶 原理&lt;/h3&gt;&lt;h4 id=&quot;基本思想&quot;&gt;&lt;a href=&quot;#基本思想&quot; class=&quot;headerlink&quot; title=&quot;基本思想&quot;
      
    
    </summary>
    
      <category term="2019" scheme="http://www.shifeiqi.top/categories/2019/"/>
    
    
      <category term="算法" scheme="http://www.shifeiqi.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.shifeiqi.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>冒泡排序</title>
    <link href="http://www.shifeiqi.top/2019/02/11/2019-02-11-bubble-sort/"/>
    <id>http://www.shifeiqi.top/2019/02/11/2019-02-11-bubble-sort/</id>
    <published>2019-02-11T07:58:00.000Z</published>
    <updated>2019-03-06T12:23:27.452Z</updated>
    
    <content type="html"><![CDATA[<h3 id="💣-原理"><a href="#💣-原理" class="headerlink" title="💣 原理"></a>💣 原理</h3><h4 id="冒泡排序基本思想："><a href="#冒泡排序基本思想：" class="headerlink" title="冒泡排序基本思想："></a>冒泡排序基本思想：</h4><ol><li>将待排序队列分为<code>未排序子队列</code>（位于左侧，初始值为待排序队列）和<code>已排序子队列</code>（位于右侧，初始值为空）。</li><li>走访<code>未排序子队列</code>，选择<code>未排序子队列</code>中的最大值交换到<code>未排序子队列</code>的列尾。</li><li><code>未排序子队列</code>长度减一， <code>已排序子队列</code>长度加一。</li><li><code>未排序子队列</code>长度 == 0 ?  排序结束 ：  重复第2步。  </li></ol><h4 id="时间复杂度：O-n-2-。"><a href="#时间复杂度：O-n-2-。" class="headerlink" title="时间复杂度：O(n^2)。"></a>时间复杂度：<code>O(n^2)。</code></h4><h4 id="稳定性排序算法。"><a href="#稳定性排序算法。" class="headerlink" title="稳定性排序算法。"></a>稳定性排序算法。</h4><h3 id="🔫-示例"><a href="#🔫-示例" class="headerlink" title="🔫 示例"></a>🔫 示例</h3><p>  以下是对队列 <code>[4, 2, 3, 6, 8, 1, 5]</code> 进行冒泡排序的模拟过程（注：算法抽象过程描述，非程序运行过程）。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>     [<span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">5</span> ]</span><br><span class="line">      [    未排序子队列     ] [已排序子队列]    <span class="comment">// 将待排序队列分为 [未排序子队列] 和 [已排序子队列]</span></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">1</span>     [<span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>,    <span class="number">1</span>, <span class="number">5</span>,   <span class="number">8</span>]</span><br><span class="line">      [    未排序子队列     ] [已排序子队列]    <span class="comment">//第1次走访，</span></span><br><span class="line">                                              <span class="comment">//选取当前未排序子队列中最大值8冒泡到最后</span></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">2</span>     [<span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>,       <span class="number">1</span>, <span class="number">5</span>,   <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line">      [    未排序子队列     ] [已排序子队列]    <span class="comment">//第2次走访，</span></span><br><span class="line">                                              <span class="comment">//选取当前未排序子队列中最大值6冒泡到最后</span></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">3</span>     [<span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>,       <span class="number">1</span>,      <span class="number">5</span>,  <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line">      [    未排序子队列     ] [已排序子队列]    <span class="comment">//第3次走访，</span></span><br><span class="line">                                              <span class="comment">//选取当前未排序子队列中最大值5冒泡到最后</span></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">4</span>     [   <span class="number">2</span>, <span class="number">3</span>,       <span class="number">1</span>,      <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line">      [    未排序子队列     ] [已排序子队列]    <span class="comment">//第4次走访，</span></span><br><span class="line">                                              <span class="comment">//选取当前未排序子队列中最大值4冒泡到最后</span></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line"><span class="number">5</span>     [   <span class="number">2</span>,          <span class="number">1</span>,      <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line">      [    未排序子队列     ] [已排序子队列]    <span class="comment">//第5次走访，</span></span><br><span class="line">                                              <span class="comment">//选取当前未排序子队列中最大值3冒泡到最后</span></span><br><span class="line">------------------------------------------------------------------------------------                                              </span><br><span class="line"><span class="number">6</span>     [               <span class="number">1</span>,      <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line">      [    未排序子队列     ] [已排序子队列]    <span class="comment">//第6次走访，</span></span><br><span class="line">                                              <span class="comment">//选取当前未排序子队列中最大值2冒泡到最后</span></span><br><span class="line">------------------------------------------------------------------------------------                                              </span><br><span class="line"><span class="number">7</span>     [                       <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line">      [    未排序子队列     ] [已排序子队列]    <span class="comment">//第7次走访，</span></span><br><span class="line">                                              <span class="comment">//选取当前未排序子队列中最大值1冒泡到最后</span></span><br></pre></td></tr></table></figure></p><h3 id="🔪-算法实现"><a href="#🔪-算法实现" class="headerlink" title="🔪 算法实现"></a>🔪 算法实现</h3><h4 id="Java实现"><a href="#Java实现" class="headerlink" title="Java实现"></a>Java实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// swap</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> lIndex, <span class="keyword">int</span> rIndex)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = array[lIndex];</span><br><span class="line">    array[lIndex] = array[rIndex];</span><br><span class="line">    array[rIndex] = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// sort interface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] bubbleSort(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">    <span class="keyword">int</span>[] array = Arrays.copyOf(nums, nums.length);</span><br><span class="line">    <span class="comment">// bubble sort</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[j] &gt; array[j + <span class="number">1</span>])</span><br><span class="line">                swap(array, j, j + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="JavaScript实现"><a href="#JavaScript实现" class="headerlink" title="JavaScript实现"></a>JavaScript实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// swap</span></span><br><span class="line"><span class="keyword">const</span> swap = <span class="function">(<span class="params">array, lIndex, rIndex</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> tmp = array[lIndex];</span><br><span class="line">    array[lIndex] = array[rIndex];</span><br><span class="line">    array[rIndex] = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// sort interface</span></span><br><span class="line"><span class="keyword">const</span> bubbleSort = <span class="function"><span class="params">nums</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> array = nums.slice();</span><br><span class="line">    <span class="comment">// bubble sort</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; array.length - i - <span class="number">1</span>; j++)</span><br><span class="line">      <span class="keyword">if</span>(array[j] &gt; array[j + <span class="number">1</span>])</span><br><span class="line">        swap(array, j, j + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;💣-原理&quot;&gt;&lt;a href=&quot;#💣-原理&quot; class=&quot;headerlink&quot; title=&quot;💣 原理&quot;&gt;&lt;/a&gt;💣 原理&lt;/h3&gt;&lt;h4 id=&quot;冒泡排序基本思想：&quot;&gt;&lt;a href=&quot;#冒泡排序基本思想：&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="2019" scheme="http://www.shifeiqi.top/categories/2019/"/>
    
    
      <category term="算法" scheme="http://www.shifeiqi.top/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.shifeiqi.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
